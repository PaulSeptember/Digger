public class MapsStore {
    public static int[][] getMap(int number) {

        switch (number) {
            case 1:
                return new int[][]
                        {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                         {1, 0, 1, 1, 1, 4, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 1},
                         {1, 0, 1, 1, 2, 2, 1, 1, 2, 1, 1, 0, 1, 4, 1, 1, 1},
                         {1, 0, 4, 1, 2, 2, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1},
                         {1, 0, 1, 1, 2, 2, 4, 1, 2, 4, 1, 0, 1, 2, 2, 2, 1},
                         {4, 0, 1, 1, 2, 2, 1, 1, 2, 1, 1, 0, 1, 2, 2, 2, 1},
                         {1, 0, 0, 1, 2, 2, 1, 1, 2, 1, 1, 0, 1, 2, 2, 2, 1},
                         {1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1},
                         {1, 1, 0, 0, 0, 0, 1, 4, 3, 4, 1, 0, 1, 1, 1, 1, 1},
                         {1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1},
                         {1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 1},
                         {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
                         };
            case 2:
                return new int[][]
                               {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                {1, 0, 0, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 0, 5, 1},
                                {1, 2, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 2, 1},
                                {1, 2, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0, 2, 1},
                                {1, 2, 1, 1, 0, 1, 1, 2, 2, 2, 1, 1, 0, 1, 1, 2, 1},
                                {4, 1, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 1, 1},
                                {1, 1, 1, 4, 1, 1, 0, 1, 1, 1, 0, 1, 1, 4, 1, 1, 1},
                                {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},
                                {1, 1, 2, 1, 1, 1, 0, 0, 3, 0, 0, 1, 1, 1, 2, 1, 1},
                                {1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1},
                                {1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1},
                                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
                        };
            case 3:
                return new int[][]
                               {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1},
                                {1, 0, 2, 4, 2, 2, 0, 1, 0, 1, 0, 2, 2, 4, 2, 0, 1},
                                {1, 0, 2, 2, 2, 1, 0, 4, 0, 1, 0, 1, 2, 2, 2, 0, 1},
                                {1, 0, 2, 2, 2, 0, 0, 1, 0, 1, 0, 0, 1, 2, 2, 0, 1},
                                {4, 0, 2, 2, 1, 0, 1, 2, 0, 2, 1, 0, 1, 2, 2, 0, 1},
                                {1, 0, 2, 2, 0, 0, 1, 2, 0, 2, 1, 0, 0, 2, 2, 0, 1},
                                {1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 1, 0, 1, 2, 0, 1},
                                {1, 0, 2, 0, 0, 4, 2, 2, 0, 2, 2, 4, 0, 0, 2, 0, 1},
                                {1, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 1},
                                {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1},
                                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
                        };
            case 4:
                break;
        }
        return null;
    }

}
